import random

class Virus:
    def __init__(self, virusType:str, virusLevel:int, researchLevel:int, researchData:int):
        self.virusType = virusType
        self.virusLevel = virusLevel
        self.researchLevel = researchLevel
        self.researchData = researchData

    def research(self):
        number = random.randint(1, 6)
        print(f'The number of dice is {number}.')
        if number >= 1 and number <= 3:
            self.researchData += 3
        elif number >= 4 and number <= 5:
            self.researchData += 4
        else:
            self.researchData += 5

        if self.researchData > 7:
            self.researchData = 7
    
    def cure(self, n):
        if n == 0:
            self.virusLevel -= 1
        elif n == 1:
            self.researchData -= 1
            self.virusLevel -= 2
        elif n == 2:
            self.researchData -= 2
            self.virusLevel -= 3

        if self.virusLevel < 1:
            self.virusLevel = 1
    
    def vaccine(self):
        self.researchData -= 7
        self.researchLevel += 1
        if self.researchLevel > 6:
            self.researchLevel = 6

    def __str__(self):
        return f'Virus Type: {self.virusType} Virus Level: {self.virusLevel} Research Level: {self.researchLevel} Research Data: {self.researchData}'

map = (
        ((1,1,'Alpha','Vaccine'),  (1,2,'Alpha','Cure'),    (1,3,'Gamma','Research')),
        ((2,1,'Alpha','Research'), (2,2,'Beta','Vaccine'),  (2,3,'Gamma','Cure')),
        ((3,1,'Beta','Cure'),      (3,2,'Beta','Research'), (3,3,'Gamma','Vaccine'))
        )


def displayMap(map,location):
    for row in map:
        for column in row:
            if column[0] == location[0] and column[1] == location[1]:
                print('{:<18}'.format(f'{column[2]}({column[3]})@'), end='')
            else:
                print('{:<18}'.format(f'{column[2]}({column[3]})'),end='')
        print()
    print(f'You are currently at {location}.\n')



def main():
    location = [3,3]

    a = int(input('Set the level of virus Alpha (1-6): '))
    b = int(input('Set the level of virus Beta (1-6): '))
    c = int(input('Set the level of virus Gamma (1-6): '))

    alpha = Virus('Alpha', a, 4, 1)
    beta = Virus('Beta', b, 4, 1)
    gamma = Virus('Gamma', c, 4, 1)

    count = 1
    round = 1
    action = 5
    nextAction = True
    endGame = False

    print('\nGAME START!\n')
    displayMap(map,location)
    print(alpha)
    print(beta)
    print(gamma)
    print(f'Round: {round}')
    print(f'You can take {action} action(s).\n')

    while not endGame:
        if round == 3 or round == 5 or round == 7:
            options = ['Alpha', 'Beta', 'Gamma']
            selected = random.choice(options)
            if selected == 'Alpha':
                alpha.virusLevel += 2
                print(f'Round: {round}.Alpha virus level increases by 2.')
            elif selected == 'Beta':
                beta.virusLevel += 2
                print(f'Round: {round}.Beta virus level increases by 2.')
            else:
                gamma.virusLevel += 2
                print(f'Round: {round}.Gamma virus level increases by 2.')
        elif round == 8:
            alpha.virusLevel += 1
            beta.virusLevel += 1
            gamma.virusLevel += 1
            print(f'Round: {round}.All virus levels increase by 1.')
        else:
            options = ['Alpha', 'Beta', 'Gamma']
            selected = random.choice(options)
            if selected == 'Alpha':
                alpha.virusLevel += 1
                print(f'Round: {round}.Alpha virus level increases by 1.')
            elif selected == 'Beta':
                beta.virusLevel += 1
                print(f'Round: {round}.Beta virus level increases by 1.')
            else:
                gamma.virusLevel += 1
                print(f'Round: {round}.Gamma virus level increases by 1.')
        
        if alpha.virusLevel > 6:
            alpha.virusLevel = 6
        if beta.virusLevel > 6:
            beta.virusLevel = 6
        if gamma.virusLevel > 6:
            gamma.virusLevel = 6

        while action > 0:
            command = input('Enter (move | use | map | state): ')
            if command == 'move':
                nextLocation = input('Enter next location (m n): ')
                if len(nextLocation) != 3:
                    print('Error.\n')
                    nextAction = False
                elif nextLocation[1] != ' ':
                    print('Error.\n')
                    nextAction = False
                elif int(nextLocation[0])<1 or int(nextLocation[0])>3 or int(nextLocation[2])<1 or int(nextLocation[2])>3:
                    print('Error: out of bounds.\n')
                    nextAction = False
                else:
                    s = abs(int(nextLocation[0])-location[0]) + abs(int(nextLocation[2])-location[1])
                    if s >= 2:
                        print('Error: you can only move one step once.\n')
                        nextAction = False
                    else:
                        location = [int(nextLocation[0]),int(nextLocation[2])]
                        print(f'You are currently at {location}.\n')
                        nextAction = True

            elif command == 'use':
                virus = map[int(location[0])-1][int(location[1])-1][2]
                method = map[int(location[0])-1][int(location[1])-1][3]
                if virus == 'Alpha':
                    if method == 'Research':
                        alpha.research()
                        nextAction = True
                    elif method == 'Cure':
                        n = int(input('Enter the amount of research data you want to spend (0-2): '))
                        if n > 2 or n < 0 :
                            print('Error.\n')
                            nextAction = False
                        elif alpha.researchData < n:
                            print('Error: you don\'t have enough research data.\n')
                            nextAction = False
                        else:
                            alpha.cure(n)
                            nextAction = True
                    else:
                        if alpha.researchData < 7:
                            print('Error: you don\'t have enough research data.\n')
                            nextAction = False
                        else:
                            alpha.vaccine()
                            nextAction = True
                    print(alpha,'\n')

                elif virus == 'Beta':
                    if method == 'Research':
                        beta.research()
                        nextAction = True
                    elif method == 'Cure':
                        n = int(input('Enter the amount of research data you want to spend (0-2): '))
                        if n > 2 or n < 0 :
                            print('Error.\n')
                            nextAction = False
                        elif beta.researchData < n:
                            print('Error: you don\'t have enough research data.\n')
                            nextAction = False
                        else:
                            beta.cure(n)
                            nextAction = True
                    else:
                        if beta.researchData < 7:
                            print('Error: you don\'t have enough research data.\n')
                            nextAction = False
                        else:
                            beta.vaccine()
                            nextAction = True
                    print(beta,'\n')

                else:
                    if method == 'Research':
                        gamma.research()
                        nextAction = True
                    elif method == 'Cure':
                        n = int(input('Enter the amount of research data you want to spend (0-2): '))
                        if n > 2 or n < 0 :
                            print('Error.\n')
                            nextAction = False
                        elif gamma.researchData < n:
                            print('Error: you don\'t have enough research data.\n')
                            nextAction = False
                        else:
                            gamma.cure(n)
                            nextAction = True
                    else:
                        if gamma.researchData < 7:
                            print('Error: you don\'t have enough research data.\n')
                            nextAction = False
                        else:
                            gamma.vaccine()
                            nextAction = True
                    print(gamma,'\n')

            elif command == 'map':
                displayMap(map, location)
                nextAction = False

            elif command == 'state':
                print(alpha)
                print(beta)
                print(gamma)
                print(f'Round: {round}')
                print(f'You can take {action} action(s).\n')
                nextAction = False

            else:
                print('Error.\n')
                nextAction = False

            if nextAction == True:
                action -= 1
            
            if alpha.virusLevel == 6 and beta.virusLevel == 6 and gamma.virusLevel == 6:
                print('You lose.')
                endGame = True
            elif alpha.researchLevel == 6 and beta.researchLevel ==6 and gamma.researchLevel == 6:
                print('You win!')
                endGame = True

        round += 1
        action = 5
        if round == 9:
            count += 1
            if count == 7:
                count = 6
            round = count



main()
